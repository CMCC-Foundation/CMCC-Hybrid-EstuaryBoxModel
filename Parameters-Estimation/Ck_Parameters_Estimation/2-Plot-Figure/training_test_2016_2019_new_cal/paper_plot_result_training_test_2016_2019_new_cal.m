addpath(genpath('..\..\0-Dataset\training_test_2016_2019_new_cal'));
addpath(genpath('..\..\1_Trained-Models\training_test_2016_2019_new_cal'));
addpath(genpath('..\..\..\..\Machine-Learning-Tools\3-Plot-Figure'));
load("..\..\0-Dataset\training_test_2016_2019_new_cal\Ck-Training-Dataset-new-cal.mat");
load("..\..\0-Dataset\training_test_2016_2019_new_cal\Ck-Test-Dataset-new-cal.mat");
load("..\..\1-Trained-Models\training_test_2016_2019_new_cal\Ck-Trained-Tested-model-new-cal.mat");

algorithm_names = {'EBM','RF', 'Lsboost', 'NN'};
response = 'CkObs';

%% Training dataset
training_table_results = array2table([ck_training_dataset.CkObs ...
    table2array(result_trained_model.EBM.validation_results.validation_predictions)...
    result_trained_model.random_forest.validation_results.validation_predictions...
    result_trained_model.lsboost.validation_results.validation_predictions...
    result_trained_model.neural_network.validation_results.validation_predictions ...
],"VariableNames",{'real_sal', 'ebm_pred' ,'rf_pred', 'lsb_pred', 'nn_pred'});

%% Test dataset
test_table_results = array2table([ck_test_dataset.CkObs ...
    table2array(result_trained_model.EBM.test_results.test_predictions)...
    result_trained_model.random_forest.test_results.test_predictions...
    result_trained_model.lsboost.test_results.test_predictions...
    result_trained_model.neural_network.test_results.test_predictions ...
],"VariableNames",{'real_sal', 'ebm_pred' ,'rf_pred', 'lsb_pred', 'nn_pred'});

create_perfect_fit_residuals_plot_separated(training_table_results, test_table_results, algorithm_names, response, "",true,30);
